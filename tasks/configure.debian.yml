---

- name: "Griffin - Create a new database with name '{{ hm_griffin__dbname }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_db:
    name: "{{ hm_griffin__dbname }}"

- name: "Griffin - Add TimescaleDB extension to database '{{ hm_griffin__dbname }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_ext:
    name: timescaledb
    db: "{{ hm_griffin__dbname }}"
    cascade: true

- name: "Griffin - Creating user '{{ hm_griffin__dbuser }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_user:
    db: "{{ hm_griffin__dbname }}"
    name: "{{ hm_griffin__dbuser }}"
    password: "{{ hm_griffin__dbpswd }}"
    encrypted: yes
    priv: CONNECT
    role_attr_flags: "NOSUPERUSER,NOCREATEROLE,NOCREATEDB,NOREPLICATION"
    state: present
    login_user: "{{ hm_pgsql__user }}"

# GRANT ALL PRIVILEGES ON DATABASE {{ hm_griffin__dbname }} TO {{ hm_griffin__dbuser }}"
- name: "Griffin - Grant privileges to '{{ hm_griffin__dbname }}' to user '{{ hm_griffin__dbuser }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_privs:
    db: postgres
    privs: ALL
    type: database
    objs: "{{ hm_griffin__dbname }}"
    role: "{{ hm_griffin__dbuser }}"
    grant_option: yes

# ALTER DEFAULT PRIVILEGES ON DATABASE {{ hm_griffin__dbname }} TO {{ hm_griffin__dbuser }}
- name: "Griffin - Alter default privileges to '{{ hm_griffin__dbname }}' to user '{{ hm_griffin__dbuser }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_privs:
    db: "{{ hm_griffin__dbname }}"
    objs: ALL_DEFAULT
    privs: ALL
    type: default_privs
    role: "{{ hm_griffin__dbuser }}"
    grant_option: yes


#------------------------------------------------------------------------------


- name: "User 'telegraf': Adding access to SSL certificates"
  user:
    name: telegraf
    groups: ssl-cert
    append: yes
  when: '"servers_certified" in group_names'

- name: Configuring local Telegraf
  template:
    src: "{{ item }}"
    dest: /etc/telegraf/telegraf.conf
    owner: root
    group: root
    mode: 0644
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.griffin/telegraf.conf.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/telegraf.conf.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/telegraf.conf.j2"
    - "inventory/group_files/servers/honzamach.griffin/telegraf.conf.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.griffin/telegraf.conf.j2"
    - "telegraf.conf.{{ ansible_lsb['codename'] }}.j2"
    - "telegraf.conf.j2"
  notify:
    - Restart Telegraf service

- name: Ensuring Telegraf service is running and enabled at system start
  service:
    name: telegraf
    state: started
    enabled: yes


#------------------------------------------------------------------------------


- name: "User 'grafana': Adding access to SSL certificates"
  user:
    name: grafana
    groups: ssl-cert
    append: yes
  when: '"servers_certified" in group_names'

- name: "Grafana - Create a new database with name '{{ hm_griffin__grafana_dbname }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_db:
    name: "{{ hm_griffin__grafana_dbname }}"

- name: "Grafana - Creating user '{{ hm_griffin__grafana_dbuser }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_user:
    db: "{{ hm_griffin__grafana_dbname }}"
    name: "{{ hm_griffin__grafana_dbuser }}"
    password: "{{ hm_griffin__grafana_dbpswd }}"
    encrypted: yes
    priv: CONNECT
    role_attr_flags: "NOSUPERUSER,NOCREATEROLE,NOCREATEDB,NOREPLICATION"
    state: present
    login_user: "{{ hm_pgsql__user }}"

# GRANT ALL PRIVILEGES ON DATABASE {{ hm_griffin__grafana_dbname }} TO {{ hm_griffin__grafana_dbuser }}"
- name: "Grafana - Grant privileges to '{{ hm_griffin__grafana_dbname }}' to user '{{ hm_griffin__grafana_dbuser }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_privs:
    db: postgres
    privs: ALL
    type: database
    objs: "{{ hm_griffin__grafana_dbname }}"
    role: "{{ hm_griffin__grafana_dbuser }}"
    grant_option: yes

# ALTER DEFAULT PRIVILEGES ON DATABASE {{ hm_griffin__grafana_dbname }} TO {{ hm_griffin__grafana_dbuser }}
- name: "Grafana - Alter default privileges to '{{ hm_griffin__grafana_dbname }}' to user '{{ hm_griffin__grafana_dbuser }}'"
  become: yes
  become_user: "{{ hm_pgsql__user }}"
  postgresql_privs:
    db: "{{ hm_griffin__grafana_dbname }}"
    objs: ALL_DEFAULT
    privs: ALL
    type: default_privs
    role: "{{ hm_griffin__grafana_dbuser }}"
    grant_option: yes

- name: Configuring Grafana
  template:
    src: "{{ item }}"
    dest: /etc/grafana/grafana.ini
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.griffin/grafana.ini.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/grafana.ini.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/grafana.ini.j2"
    - "inventory/group_files/servers/honzamach.griffin/grafana.ini.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.griffin/grafana.ini.j2"
    - "grafana.ini.{{ ansible_lsb['codename'] }}.j2"
    - "grafana.ini.j2"
  notify:
    - Restart Grafana service

- name: Configuring Grafana datasources
  template:
    src: "{{ item }}"
    dest: /etc/grafana/provisioning/datasources/griffin.yaml
    owner: root
    group: root
    mode: 0644
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.griffin/grafanads.griffin.yaml.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/grafanads.griffin.yaml.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/grafanads.griffin.yaml.j2"
    - "inventory/group_files/servers/honzamach.griffin/grafanads.griffin.yaml.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.griffin/grafanads.griffin.yaml.j2"
    - "grafanads.griffin.yaml.{{ ansible_lsb['codename'] }}.j2"
    - "grafanads.griffin.yaml.j2"
  notify:
    - Restart Grafana service

- name: Ensuring Grafana service is running and enabled at system start
  service:
    name: grafana-server
    state: started
    enabled: yes

- name: "Database monitoring - Enable passwordless local login for user '{{ hm_griffin__dbuser }}'"
  postgresql_pg_hba:
    dest: "/etc/postgresql/{{ hm_pgsql__major_version }}/main/pg_hba.conf"
    contype: hostssl
    users: "{{ hm_griffin__dbuser }}"
    databases: "{{ hm_griffin__dbname }}"
    address: all
    method: md5
    backup: yes
  notify:
    - Restart PostgreSQL service


#-------------------------------------------------------------------------------


- name: Enabling necessary Apache modules
  apache2_module:
    name: "{{ item }}"
    state: present
  with_items:
    - rewrite
    - ssl
    - cgid
    - headers
    - proxy
    - proxy_http
    - proxy_wstunnel
  notify: Restart Apache service

- meta: flush_handlers

- name: Removing default Apache sites
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/apache2/sites-enabled/000-default.conf
  notify: Restart Apache service

- name: Configuring custom Griffin sites for Apache2 - redirection site
  template:
    src: "{{ item }}"
    dest: "/etc/apache2/sites-available/site_griffin_redirect.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.griffin/apache2_site_griffin_redirect.conf.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/apache2_site_griffin_redirect.conf.{{ ansible_distribution_release }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/apache2_site_griffin_redirect.conf.j2"
    - "inventory/group_files/servers/honzamach.griffin/apache2_site_griffin_redirect.conf.{{ ansible_distribution_release }}.j2"
    - "inventory/group_files/servers/honzamach.griffin/apache2_site_griffin_redirect.conf.j2"
    - "apache2_site_griffin_redirect.conf.{{ ansible_distribution_release }}.j2"
    - "apache2_site_griffin_redirect.conf.j2"
  notify: Restart Apache service

- name: Configuring custom Griffin sites for Apache2 - master site
  template:
    src: "{{ item }}"
    dest: "/etc/apache2/sites-available/site_griffin.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.griffin/apache2_site_griffin.conf.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/apache2_site_griffin.conf.{{ ansible_distribution_release }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/apache2_site_griffin.conf.j2"
    - "inventory/group_files/servers/honzamach.griffin/apache2_site_griffin.conf.{{ ansible_distribution_release }}.j2"
    - "inventory/group_files/servers/honzamach.griffin/apache2_site_griffin.conf.j2"
    - "apache2_site_griffin.conf.{{ ansible_distribution_release }}.j2"
    - "apache2_site_griffin.conf.j2"
  notify: Restart Apache service

- name: Enabling custom Griffin sites for Apache2
  file:
    src: "/etc/apache2/sites-available/{{ item }}"
    dest: "/etc/apache2/sites-enabled/{{ item }}"
    state: link
  with_items:
    - site_griffin_redirect.conf
    - site_griffin.conf
  notify: Restart Apache service

- name: Ensuring Apache service is running and enabled at system start.
  service:
    name: apache2
    state: started
    enabled: yes


#-------------------------------------------------------------------------------


- name: "Detecting current list of tables in '{{ hm_griffin__dbname }}' database"
  shell: "psql -d {{ hm_griffin__dbname }} -c \"SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = 'public';\" | tail -n +3 | head -n -2 | sed -e \"s/ //\""
  register: hm_griffin__dbtables
  changed_when: False

- debug:
    var: hm_griffin__dbtables
  tags:
    - debug

- name: "Configuring data retention cronjob for '{{ hm_griffin__dbname }}' database"
  template:
    src: "{{ item }}"
    dest: /etc/cron.d/griffin-data-retention
    owner: root
    group: root
    mode: 0644
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.griffin/griffin-data-retention.cron.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/griffin-data-retention.cron.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.griffin/griffin-data-retention.cron.j2"
    - "inventory/group_files/servers/honzamach.griffin/griffin-data-retention.cron.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.griffin/griffin-data-retention.cron.j2"
    - "griffin-data-retention.cron.{{ ansible_lsb['codename'] }}.j2"
    - "griffin-data-retention.cron.j2"
